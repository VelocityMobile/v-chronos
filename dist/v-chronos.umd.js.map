{"version":3,"file":"v-chronos.umd.js","sources":["../src/utils/date/date.util.ts","../src/utils/time/time.util.ts","../src/utils/date-time/conversion.util.ts"],"sourcesContent":["const moment = require('moment')\nimport { Moment } from 'moment'\nimport { VDateEvent } from '../../models/date'\n\nexport function convertStringToNumber(date: string): number {\n  return new Date(date).getTime()\n}\n\nexport function willDatesCollide(eventOne: VDateEvent, eventTwo: VDateEvent): boolean {\n  return (convertStringToNumber(eventTwo.start) <= convertStringToNumber(eventOne.end)) &&\n   (convertStringToNumber(eventOne.start) <= convertStringToNumber(eventTwo.end))\n}\n\nexport function isInDateRange (startDate: string, endDate: string, date: string): boolean {\n  const dt = convertStringToNumber(date)\n  return dt >= convertStringToNumber(startDate) && dt <= convertStringToNumber(endDate)\n}\n\nexport function getInitialMomentDate(momentObject?: any): Moment {\n  return moment(momentObject).clone().month(0).year(1971).date(1)\n}\nexport function addOneDay(date: string): string {\n  return moment(date).add(1, 'day').toISOString()\n}\nexport function addDayToDateEvent(dateEvent: VDateEvent): VDateEvent {\n  return {\n    start: addOneDay(dateEvent.start),\n    end: addOneDay(dateEvent.end)\n  }\n}\n","import { Moment } from 'moment'\nconst moment = require('moment')\n\nimport {\n  willDatesCollide,\n  getInitialMomentDate,\n  addDayToDateEvent\n} from '../date/date.util'\n\nimport { VTimeEvent } from '../../models/time'\nimport { VDateEvent } from '../../models/date'\nimport { convertTimeEventToDateEvent } from '../date-time/conversion.util'\n\nexport const TIME_WITH_TIMEZONE_FORMAT = 'HH:mm:ssZ'\n\nexport function willTimesCollide(event1: VTimeEvent, event2: VTimeEvent): boolean {\n  const dateEvent1 = convertTimeEventToDateEvent(event1)\n  const dateEvent2 = convertTimeEventToDateEvent(event2)\n  if (dateEvent2.isMultipleDays && dateEvent1.isMultipleDays) {\n    return willDatesCollide(dateEvent1, dateEvent2)\n  } else if (dateEvent1.isMultipleDays) {\n    return multipleDayAndSingleDayTimeCollision(dateEvent2, dateEvent1)\n  } else if (dateEvent2.isMultipleDays) {\n    return multipleDayAndSingleDayTimeCollision(dateEvent1, dateEvent2)\n  }\n  return willDatesCollide(dateEvent1, dateEvent2)\n}\n\nfunction multipleDayAndSingleDayTimeCollision(singleDayEvent: VDateEvent, multipleDayEvent: VDateEvent): boolean {\n  const nextDayEvent = addDayToDateEvent({ ...singleDayEvent })\n  return willDatesCollide(singleDayEvent, multipleDayEvent) || willDatesCollide(multipleDayEvent, nextDayEvent)\n}\nexport function convertTimeToMoment(time: string): Moment {\n  return moment(time, TIME_WITH_TIMEZONE_FORMAT)\n}\n","\nconst moment = require('moment')\n\nimport { VDateEvent } from '../../models/date'\nimport { VTimeEvent } from '../../models/time'\nimport { convertTimeToMoment } from '../time/time.util'\nimport { getInitialMomentDate } from '../date/date.util'\n\nexport function convertTimeEventToDateEvent({ start, end }: VTimeEvent): VDateEvent {\n  const startTimeMoment = convertTimeToMoment(start)\n  const endTimeMoment = convertTimeToMoment(end)\n  const startDate = convertTimeToDate(start)\n  const isMultipleDays = startTimeMoment.isAfter(endTimeMoment)\n  const endDate = convertTimeToDate(end, isMultipleDays)\n\n  return {\n    start: startDate,\n    end: endDate,\n    isMultipleDays\n  }\n}\n\nexport function convertTimeToDate(time: string, addDay?: boolean): string {\n    let date = getInitialMomentDate()\n    if (addDay) date = date.add(1, 'day')\n    const dateTime = moment(\n        appendDateToTime(time, date.toISOString())\n    ).toISOString()\n    return dateTime\n}\n\nfunction appendDateToTime(time: string, date: string): string {\n  return (date.slice(0, 11) + time)\n}\n"],"names":["moment"],"mappings":"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"}